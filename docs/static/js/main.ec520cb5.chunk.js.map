{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","handleDelete","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","go","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","push","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec520cb5.chunk.js","sourcesContent":["// eslint-disable-next-line\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h1>The Titan Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\"> Home</Link>\r\n                <Link to=\"/create\">New Blog</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","//const BlogList = (props) => {\r\n// Deconstructing the props argument/array\r\nimport { Link } from \"react-router-dom\"\r\nconst BlogList = ({ blogs, title, handleDelete }) => {\r\n    // const blogs = props.blogs;\r\n    // const title = props.title;\r\n    return (\r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map((blog) => (\r\n                <div className=\"blog-preview\" key={blog.id}>\r\n                    <Link to={`/blogs/${blog.id}`}>\r\n                        <h2>{blog.title}</h2>\r\n                        <p>Written by {blog.author}</p>\r\n                    </Link>\r\n\r\n                    {/* <button onClick={() => handleDelete(blog.id)}>Delete Blog</button> */}\r\n                    {/* <p>{blog.body}</p> */}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlogList;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      fetch(url, { signal: abortCont.signal })\r\n        .then(res => {\r\n          if (!res.ok) { // error coming back from server\r\n            throw Error('could not fetch the data for that resource');\r\n          }\r\n          return res.json();\r\n        })\r\n        .then(data => {\r\n          setIsPending(false);\r\n          setData(data);\r\n          setError(null);\r\n        })\r\n        .catch(err => {\r\n          // auto catches network / connection error\r\n          if (err.name === 'AbortError') {\r\n            console.log('fetch aborted')\r\n          } else {\r\n            setIsPending(false);\r\n            setError(err.message);\r\n          }\r\n\r\n        })\r\n    }, 500);\r\n    return () => abortCont.abort();\r\n\r\n  }, [url])\r\n\r\n  return { data, isPending, error };\r\n}\r\n\r\nexport default useFetch;","// eslint-disable-next-line\r\nimport { useState, useEffect } from 'react';\r\nimport BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {\r\n    const{ data: blogs, isPending, error} = useFetch('http://localhost:8000/blogs')\r\n\r\n    // const handleDelete = (id) => {\r\n    //     const newBlogs = blogs.filter(blog => blog.id !== id);\r\n    //     setBlogs(newBlogs)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {error && <div>{error}</div>}\r\n            {isPending && <div>Loading...</div>}\r\n            {blogs && <BlogList blogs={blogs} title=\"All Blogs!\" />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"; \r\nconst Create = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('mario');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = { title, body, author };\r\n        setIsPending(true);\r\n        fetch('http://localhost:8000/blogs', {\r\n            method: 'POST',\r\n            headers: {'content-type': \"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        }).then(() => {\r\n            console.log('new blog added')\r\n            setIsPending(true);\r\n            history.go(-1); //takes you one page pack\r\n            //history.push('/') //takes you home\r\n        })\r\n        \r\n        //console.log(blog)\r\n\r\n    }\r\n    return (\r\n        <div className=\"create\">\r\n            <h2>Add a New Blog</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Blog title:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <label>Blog body:</label>\r\n                <textarea\r\n                    required\r\n                    value={body}\r\n                    onChange={(e) => setBody(e.target.value)}\r\n                ></textarea>\r\n                <label>Blog author:</label>\r\n                <select\r\n                    value={author}\r\n                    onChange={(e) => setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"mario\">mario</option>\r\n                    <option value=\"yoshi\">yoshi</option>\r\n                </select>\r\n                {!isPending && <button>Add Blog</button>}\r\n                {isPending && <button disabled>Adding Blog...</button>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n    const { id } = useParams();\r\n    const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id)\r\n    const history = useHistory()\r\n\r\n    const handleClick = () => {\r\n        fetch('http://localhost:8000/blogs/' + blog.id, {\r\n            method:'DELETE'\r\n        }).then(()=>{\r\n            history.push('/')\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"blog-details\">\r\n\r\n            {isPending && <div>loading...</div>}\r\n            {error && <div>{error}</div>}\r\n            {blog && (\r\n                <article>\r\n                    <h2>{blog.title}</h2>\r\n                    <p>Written by {blog.author}</p>\r\n                    <div>{blog.body}</div>\r\n                    <button onClick={handleClick}>Delete</button>\r\n                </article>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlogDetails;","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h2>Error 404</h2>\r\n            <h2>sorry</h2>\r\n            <p> That page cannot be found</p>\r\n            <Link to=\"/\">Back to te homepage...</Link>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar'\nimport Home from './Home'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails  />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}